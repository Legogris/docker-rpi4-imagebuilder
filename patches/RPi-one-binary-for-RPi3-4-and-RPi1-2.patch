From patchwork Fri Sep 27 09:00:30 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Matthias Brugger <matthias.bgg@kernel.org>
X-Patchwork-Id: 1168352
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=none (mailfrom) smtp.mailfrom=lists.denx.de
 (client-ip=81.169.180.215; helo=lists.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de;
 receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=fail (p=none dis=none) header.from=kernel.org
Authentication-Results: ozlabs.org;
 dkim=fail reason="signature verification failed" (1024-bit key;
 unprotected) header.d=kernel.org header.i=@kernel.org
 header.b="rO4jtGLX"; dkim-atps=neutral
Received: from lists.denx.de (dione.denx.de [81.169.180.215])
 by ozlabs.org (Postfix) with ESMTP id 46fm4g0BbRz9sPK
 for <incoming@patchwork.ozlabs.org>;
 Fri, 27 Sep 2019 19:01:38 +1000 (AEST)
Received: by lists.denx.de (Postfix, from userid 105)
 id A49EDC21DA2; Fri, 27 Sep 2019 09:01:17 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on lists.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=T_DKIM_INVALID
 autolearn=unavailable autolearn_force=no version=3.4.0
Received: from lists.denx.de (localhost [IPv6:::1])
 by lists.denx.de (Postfix) with ESMTP id 17CFEC21DD9;
 Fri, 27 Sep 2019 09:01:09 +0000 (UTC)
Received: by lists.denx.de (Postfix, from userid 105)
 id A3816C21EA1; Fri, 27 Sep 2019 09:00:49 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by lists.denx.de (Postfix) with ESMTPS id 5AE33C21E3B
 for <u-boot@lists.denx.de>; Fri, 27 Sep 2019 09:00:47 +0000 (UTC)
Received: from localhost.localdomain (unknown [65.39.69.237])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128
 bits)) (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id D4796217F4;
 Fri, 27 Sep 2019 09:00:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1569574846;
 bh=W4tCdeGuw+RTJy77QzXGqT0479ZX9i+/7GhFJ4/tgTg=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=rO4jtGLXrskkVUHMHQ7G3CNkUzajO8qPr7DQ1jnNML6RaDkZzmXTc3KhfJmFudokK
 Elwisu1COKUfHIkEhp+nhjp+OWCsAoZWSQ72MY46qHxynAYyM15sgzJYllQH+583WZ
 d8jgeqXKm7ani5WF4wI13WR6OctJQyofOJJdp/HQ=
From: matthias.bgg@kernel.org
To: u-boot@lists.denx.de, Alexander Graf <agraf@csgraf.de>, fvogt@suse.com, 
 matthias.bgg@kernel.org
Date: Fri, 27 Sep 2019 11:00:30 +0200
Message-Id: <20190927090032.13953-2-matthias.bgg@kernel.org>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190927090032.13953-1-matthias.bgg@kernel.org>
References: <20190927090032.13953-1-matthias.bgg@kernel.org>
MIME-Version: 1.0
Cc: Berkus Decker <berkus+github@metta.systems>,
 Matthias Brugger <mbrugger@suse.com>, Andrei Gherzan <andrei@balena.io>
Subject: [U-Boot] [PATCH 1/3] ARM: bcm283x: Move BCM283x_BASE to a global
 variable
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <http://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>

From: Matthias Brugger <mbrugger@suse.com>

We move the per SOC define BCM283x_BASE to a global variable.
This is a first step to provide a single binary for several bcm283x
SoCs.

Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---

 arch/arm/mach-bcm283x/include/mach/base.h  | 11 +++++++++++
 arch/arm/mach-bcm283x/include/mach/mbox.h  |  2 +-
 arch/arm/mach-bcm283x/include/mach/sdhci.h |  2 +-
 arch/arm/mach-bcm283x/include/mach/timer.h |  2 +-
 arch/arm/mach-bcm283x/include/mach/wdog.h  |  2 +-
 arch/arm/mach-bcm283x/init.c               |  8 ++++++++
 arch/arm/mach-bcm283x/mbox.c               |  8 ++++++--
 arch/arm/mach-bcm283x/reset.c              |  7 +++++--
 board/raspberrypi/rpi/lowlevel_init.S      |  8 ++++++++
 include/configs/rpi.h                      |  7 ++++++-
 10 files changed, 48 insertions(+), 9 deletions(-)
 create mode 100644 arch/arm/mach-bcm283x/include/mach/base.h

diff --git a/arch/arm/mach-bcm283x/include/mach/base.h b/arch/arm/mach-bcm283x/include/mach/base.h
new file mode 100644
index 0000000000..c4ae39852f
--- /dev/null
+++ b/arch/arm/mach-bcm283x/include/mach/base.h
@@ -0,0 +1,11 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * (C) Copyright 2019 Matthias Brugger
+ */
+
+#ifndef _BCM283x_BASE_H_
+#define _BCM283x_BASE_H_
+
+extern unsigned long rpi_bcm283x_base;
+
+#endif
diff --git a/arch/arm/mach-bcm283x/include/mach/mbox.h b/arch/arm/mach-bcm283x/include/mach/mbox.h
index 0b6c2543d5..39cf2cf9d5 100644
--- a/arch/arm/mach-bcm283x/include/mach/mbox.h
+++ b/arch/arm/mach-bcm283x/include/mach/mbox.h
@@ -37,7 +37,7 @@
 
 /* Raw mailbox HW */
 
-#define BCM2835_MBOX_PHYSADDR	(CONFIG_BCM283x_BASE + 0x0000b880)
+#define BCM2835_MBOX_OFFSET 0x0000b880
 
 struct bcm2835_mbox_regs {
 	u32 read;
diff --git a/arch/arm/mach-bcm283x/include/mach/sdhci.h b/arch/arm/mach-bcm283x/include/mach/sdhci.h
index b443c379d8..16af5787c2 100644
--- a/arch/arm/mach-bcm283x/include/mach/sdhci.h
+++ b/arch/arm/mach-bcm283x/include/mach/sdhci.h
@@ -6,7 +6,7 @@
 #ifndef _BCM2835_SDHCI_H_
 #define _BCM2835_SDHCI_H_
 
-#define BCM2835_SDHCI_BASE (CONFIG_BCM283x_BASE + 0x00300000)
+#define BCM2835_SDHCI_OFFSET 0x00300000
 
 int bcm2835_sdhci_init(u32 regbase, u32 emmc_freq);
 
diff --git a/arch/arm/mach-bcm283x/include/mach/timer.h b/arch/arm/mach-bcm283x/include/mach/timer.h
index 014355e759..c789e188be 100644
--- a/arch/arm/mach-bcm283x/include/mach/timer.h
+++ b/arch/arm/mach-bcm283x/include/mach/timer.h
@@ -6,7 +6,7 @@
 #ifndef _BCM2835_TIMER_H
 #define _BCM2835_TIMER_H
 
-#define BCM2835_TIMER_PHYSADDR	(CONFIG_BCM283x_BASE + 0x00003000)
+#define BCM2835_TIMER_OFFSET 0x00003000
 
 #define BCM2835_TIMER_CS_M3	(1 << 3)
 #define BCM2835_TIMER_CS_M2	(1 << 2)
diff --git a/arch/arm/mach-bcm283x/include/mach/wdog.h b/arch/arm/mach-bcm283x/include/mach/wdog.h
index 8292b3cf1f..2ca0e8c035 100644
--- a/arch/arm/mach-bcm283x/include/mach/wdog.h
+++ b/arch/arm/mach-bcm283x/include/mach/wdog.h
@@ -6,7 +6,7 @@
 #ifndef _BCM2835_WDOG_H
 #define _BCM2835_WDOG_H
 
-#define BCM2835_WDOG_PHYSADDR	(CONFIG_BCM283x_BASE + 0x00100000)
+#define BCM2835_WDOG_OFFSET	0x00100000
 
 struct bcm2835_wdog_regs {
 	u32 unknown0[7];
diff --git a/arch/arm/mach-bcm283x/init.c b/arch/arm/mach-bcm283x/init.c
index 97414415a6..9dcc96ba2e 100644
--- a/arch/arm/mach-bcm283x/init.c
+++ b/arch/arm/mach-bcm283x/init.c
@@ -8,6 +8,8 @@
 
 #include <common.h>
 
+extern unsigned long rpi_bcm283x_base;
+
 int arch_cpu_init(void)
 {
 	icache_enable();
@@ -15,6 +17,12 @@ int arch_cpu_init(void)
 	return 0;
 }
 
+int mach_cpu_init(void)
+{
+	rpi_bcm283x_base = CONFIG_BCM283x_BASE;
+
+	return 0;
+}
 #ifdef CONFIG_ARMV7_LPAE
 void enable_caches(void)
 {
diff --git a/arch/arm/mach-bcm283x/mbox.c b/arch/arm/mach-bcm283x/mbox.c
index 3c67f68c17..21a7ce113d 100644
--- a/arch/arm/mach-bcm283x/mbox.c
+++ b/arch/arm/mach-bcm283x/mbox.c
@@ -10,13 +10,17 @@
 
 #define TIMEOUT 1000 /* ms */
 
+extern unsigned long rpi_bcm283x_base;
+
 int bcm2835_mbox_call_raw(u32 chan, u32 send, u32 *recv)
 {
-	struct bcm2835_mbox_regs *regs =
-		(struct bcm2835_mbox_regs *)BCM2835_MBOX_PHYSADDR;
+	struct bcm2835_mbox_regs *regs;
 	ulong endtime = get_timer(0) + TIMEOUT;
 	u32 val;
 
+	regs = (struct bcm2835_mbox_regs *)(rpi_bcm283x_base
+						+ BCM2835_MBOX_OFFSET);
+
 	debug("time: %lu timeout: %lu\n", get_timer(0), endtime);
 
 	if (send & BCM2835_CHAN_MASK) {
diff --git a/arch/arm/mach-bcm283x/reset.c b/arch/arm/mach-bcm283x/reset.c
index b3da0c7cd6..aff894b3c6 100644
--- a/arch/arm/mach-bcm283x/reset.c
+++ b/arch/arm/mach-bcm283x/reset.c
@@ -11,6 +11,8 @@
 #include <asm/arch/wdog.h>
 #include <efi_loader.h>
 
+extern unsigned long rpi_bcm283x_base;
+
 #define RESET_TIMEOUT 10
 
 /*
@@ -25,8 +27,7 @@
 
 void hw_watchdog_disable(void) {}
 
-__efi_runtime_data struct bcm2835_wdog_regs *wdog_regs =
-	(struct bcm2835_wdog_regs *)BCM2835_WDOG_PHYSADDR;
+__efi_runtime_data struct bcm2835_wdog_regs *wdog_regs;
 
 void __efi_runtime reset_cpu(ulong ticks)
 {
@@ -77,6 +78,8 @@ void __efi_runtime EFIAPI efi_reset_system(
 
 efi_status_t efi_reset_system_init(void)
 {
+	wdog_regs = (struct bcm2835_wdog_regs *)(rpi_bcm283x_base +
+			BCM2835_WDOG_OFFSET);
 	return efi_add_runtime_mmio(&wdog_regs, sizeof(*wdog_regs));
 }
 
diff --git a/board/raspberrypi/rpi/lowlevel_init.S b/board/raspberrypi/rpi/lowlevel_init.S
index 435eed521f..fcb99ebef7 100644
--- a/board/raspberrypi/rpi/lowlevel_init.S
+++ b/board/raspberrypi/rpi/lowlevel_init.S
@@ -7,6 +7,14 @@
 #include <config.h>
 
 .align 8
+.global rpi_bcm283x_base
+rpi_bcm283x_base:
+#ifdef CONFIG_ARM64
+	.dword 0x0
+#else
+	.word 0x0
+#endif
+
 .global fw_dtb_pointer
 fw_dtb_pointer:
 #ifdef CONFIG_ARM64
diff --git a/include/configs/rpi.h b/include/configs/rpi.h
index 77d2d5458a..88496ac44d 100644
--- a/include/configs/rpi.h
+++ b/include/configs/rpi.h
@@ -9,6 +9,10 @@
 #include <linux/sizes.h>
 #include <asm/arch/timer.h>
 
+#ifndef __ASSEMBLY__
+#include <asm/arch/base.h>
+#endif
+
 #if defined(CONFIG_TARGET_RPI_2) || defined(CONFIG_TARGET_RPI_3_32B)
 #define CONFIG_SKIP_LOWLEVEL_INIT
 #endif
@@ -19,7 +23,8 @@
 #ifndef CONFIG_ARM64
 #define CONFIG_SYS_TIMER_RATE		1000000
 #define CONFIG_SYS_TIMER_COUNTER	\
-	(&((struct bcm2835_timer_regs *)BCM2835_TIMER_PHYSADDR)->clo)
+	(&((struct bcm2835_timer_regs *)(rpi_bcm283x_base \
+					 + BCM2835_TIMER_OFFSET))->clo)
 #endif
 
 /*

From patchwork Fri Sep 27 09:00:31 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Matthias Brugger <matthias.bgg@kernel.org>
X-Patchwork-Id: 1168353
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=none (mailfrom) smtp.mailfrom=lists.denx.de
 (client-ip=81.169.180.215; helo=lists.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de;
 receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=fail (p=none dis=none) header.from=kernel.org
Authentication-Results: ozlabs.org;
 dkim=fail reason="signature verification failed" (1024-bit key;
 unprotected) header.d=kernel.org header.i=@kernel.org
 header.b="FL1Y/fQY"; dkim-atps=neutral
Received: from lists.denx.de (dione.denx.de [81.169.180.215])
 by ozlabs.org (Postfix) with ESMTP id 46fm4k0GRsz9sPK
 for <incoming@patchwork.ozlabs.org>;
 Fri, 27 Sep 2019 19:01:42 +1000 (AEST)
Received: by lists.denx.de (Postfix, from userid 105)
 id B5602C21EC3; Fri, 27 Sep 2019 09:01:05 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on lists.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=T_DKIM_INVALID
 autolearn=unavailable autolearn_force=no version=3.4.0
Received: from lists.denx.de (localhost [IPv6:::1])
 by lists.denx.de (Postfix) with ESMTP id 85576C21E88;
 Fri, 27 Sep 2019 09:01:02 +0000 (UTC)
Received: by lists.denx.de (Postfix, from userid 105)
 id 76632C21EA1; Fri, 27 Sep 2019 09:00:52 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by lists.denx.de (Postfix) with ESMTPS id 8EDADC21E1D
 for <u-boot@lists.denx.de>; Fri, 27 Sep 2019 09:00:49 +0000 (UTC)
Received: from localhost.localdomain (unknown [65.39.69.237])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128
 bits)) (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id B240721848;
 Fri, 27 Sep 2019 09:00:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1569574848;
 bh=K98J1nY/FPSTgnPZ3z2g2tW2hdhtyruSIT+yC4DB0gQ=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=FL1Y/fQY4kQ/nTzsU5U9n/fCo5z+cDlhQA0ATUY6YPHlfUZqrGJn7whwZgffsGoVN
 Dbk+ES2fZZdS8aQketpx+Tk8kzSPOduKwmKoavvyeFkSH+QIc3IFaHbOV4P7U9AuXV
 6RMWPVc0pLcC6rBUyQadQTfh6LsHEciri/zEMAFw=
From: matthias.bgg@kernel.org
To: u-boot@lists.denx.de, Alexander Graf <agraf@csgraf.de>, fvogt@suse.com, 
 matthias.bgg@kernel.org
Date: Fri, 27 Sep 2019 11:00:31 +0200
Message-Id: <20190927090032.13953-3-matthias.bgg@kernel.org>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190927090032.13953-1-matthias.bgg@kernel.org>
References: <20190927090032.13953-1-matthias.bgg@kernel.org>
MIME-Version: 1.0
Cc: Matthias Brugger <mbrugger@suse.com>
Subject: [U-Boot] [PATCH 2/3] ARM: bcm283x: Set rpi_bcm283x_base at run-time
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <http://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>

From: Matthias Brugger <mbrugger@suse.com>

As part of the effort to create one binary for several bcm83x SoCs
we use the SoC compatible to decide which IO base address we use.

Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---

 arch/arm/mach-bcm283x/Kconfig |  6 ----
 arch/arm/mach-bcm283x/init.c  | 60 ++++++++++++++++++++++++++++++++++-
 2 files changed, 59 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-bcm283x/Kconfig b/arch/arm/mach-bcm283x/Kconfig
index b08275f598..e8e0ff0eb4 100644
--- a/arch/arm/mach-bcm283x/Kconfig
+++ b/arch/arm/mach-bcm283x/Kconfig
@@ -202,10 +202,4 @@ config SYS_SOC
 config SYS_CONFIG_NAME
 	default "rpi"
 
-config BCM283x_BASE
-	hex
-	default "0x20000000" if BCM2835
-	default "0x3f000000" if BCM2836 || BCM2837
-	default "0xfe000000" if BCM2711
-
 endmenu
diff --git a/arch/arm/mach-bcm283x/init.c b/arch/arm/mach-bcm283x/init.c
index 9dcc96ba2e..214e1078eb 100644
--- a/arch/arm/mach-bcm283x/init.c
+++ b/arch/arm/mach-bcm283x/init.c
@@ -7,9 +7,49 @@
  */
 
 #include <common.h>
+#include <dm/device.h>
+
+#define PDATA_BCM2835	0
+#define PDATA_BCM2836	1
+#define PDATA_BCM2837	2
+#define PDATA_BCM2838	3
 
 extern unsigned long rpi_bcm283x_base;
 
+struct bcm283x_pdata {
+	unsigned long io_base;
+};
+
+struct bcm283x_pdata pdata_bcm283x[] = {
+	[PDATA_BCM2835] = {
+		.io_base = 0x20000000,
+	},
+	[PDATA_BCM2836] = {
+		.io_base = 0x3f000000,
+	},
+#ifdef CONFIG_ARM64
+	[PDATA_BCM2837] = {
+		.io_base = 0x3f000000,
+	},
+	[PDATA_BCM2838] = {
+		.io_base = 0xfe000000,
+	},
+#endif
+};
+
+/*
+ * I/O address space varies on different chip versions.
+ * We set the base address by inspecting the DTB.
+ */
+static const struct udevice_id board_ids[] = {
+	{ .compatible = "brcm,bcm2835", .data = PDATA_BCM2835},
+	{ .compatible = "brcm,bcm2836", .data = PDATA_BCM2836},
+	{ .compatible = "brcm,bcm2837", .data = PDATA_BCM2837},
+	{ .compatible = "brcm,bcm2838", .data = PDATA_BCM2838},
+	{ .compatible = "brcm,bcm2711", .data = PDATA_BCM2838},
+	{ },
+};
+
 int arch_cpu_init(void)
 {
 	icache_enable();
@@ -19,10 +59,28 @@ int arch_cpu_init(void)
 
 int mach_cpu_init(void)
 {
-	rpi_bcm283x_base = CONFIG_BCM283x_BASE;
+	const struct udevice_id *of_match = board_ids;
+	int ret;
+
+	rpi_bcm283x_base = 0;
+
+	while (of_match->compatible) {
+		struct bcm283x_pdata pdat;
+
+		ret = fdt_node_check_compatible(gd->fdt_blob, 0,
+						of_match->compatible);
+		if (!ret) {
+			pdat = pdata_bcm283x[of_match->data];
+			rpi_bcm283x_base = pdat.io_base;
+			break;
+		}
+
+		of_match++;
+	}
 
 	return 0;
 }
+
 #ifdef CONFIG_ARMV7_LPAE
 void enable_caches(void)
 {

From patchwork Fri Sep 27 09:00:32 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Matthias Brugger <matthias.bgg@kernel.org>
X-Patchwork-Id: 1168355
X-Patchwork-Delegate: matthias.bgg@gmail.com
Return-Path: <u-boot-bounces@lists.denx.de>
X-Original-To: incoming@patchwork.ozlabs.org
Delivered-To: patchwork-incoming@bilbo.ozlabs.org
Authentication-Results: ozlabs.org;
 spf=none (mailfrom) smtp.mailfrom=lists.denx.de
 (client-ip=81.169.180.215; helo=lists.denx.de;
 envelope-from=u-boot-bounces@lists.denx.de;
 receiver=<UNKNOWN>)
Authentication-Results: ozlabs.org;
 dmarc=fail (p=none dis=none) header.from=kernel.org
Authentication-Results: ozlabs.org;
 dkim=fail reason="signature verification failed" (1024-bit key;
 unprotected) header.d=kernel.org header.i=@kernel.org
 header.b="W5ws3ViN"; dkim-atps=neutral
Received: from lists.denx.de (dione.denx.de [81.169.180.215])
 by ozlabs.org (Postfix) with ESMTP id 46fm5L60nnz9sPK
 for <incoming@patchwork.ozlabs.org>;
 Fri, 27 Sep 2019 19:02:14 +1000 (AEST)
Received: by lists.denx.de (Postfix, from userid 105)
 id 88CDBC21EBD; Fri, 27 Sep 2019 09:01:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on lists.denx.de
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=T_DKIM_INVALID
 autolearn=unavailable autolearn_force=no version=3.4.0
Received: from lists.denx.de (localhost [IPv6:::1])
 by lists.denx.de (Postfix) with ESMTP id B5EE6C21EC3;
 Fri, 27 Sep 2019 09:01:19 +0000 (UTC)
Received: by lists.denx.de (Postfix, from userid 105)
 id 059DCC21EA6; Fri, 27 Sep 2019 09:00:53 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by lists.denx.de (Postfix) with ESMTPS id 4BB50C21E1B
 for <u-boot@lists.denx.de>; Fri, 27 Sep 2019 09:00:51 +0000 (UTC)
Received: from localhost.localdomain (unknown [65.39.69.237])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128
 bits)) (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id BDAF4217D7;
 Fri, 27 Sep 2019 09:00:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1569574850;
 bh=OCbBP/UDdYPpi9RGFCSDSdpJgBijWKXmdcZixMafUQk=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=W5ws3ViNFnweFqRCQ5OpVGM9Z2pWFBQpe0vC2g526QnMxAYGstXddWtKDsjkmJ6G5
 C0FLiKHXFI4cqwrgIX8tzvylnsCJJBYhocJtUUMvypESM5cHqBzDuqb69Sjq7asGcy
 HxtH9oA9ffKdSWVN53k9DGtkuPanrAQ6YLpb2tLI=
From: matthias.bgg@kernel.org
To: u-boot@lists.denx.de, Alexander Graf <agraf@csgraf.de>, fvogt@suse.com, 
 matthias.bgg@kernel.org
Date: Fri, 27 Sep 2019 11:00:32 +0200
Message-Id: <20190927090032.13953-4-matthias.bgg@kernel.org>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190927090032.13953-1-matthias.bgg@kernel.org>
References: <20190927090032.13953-1-matthias.bgg@kernel.org>
MIME-Version: 1.0
Cc: Matthias Brugger <mbrugger@suse.com>
Subject: [U-Boot] [PATCH 3/3] ARM: bcm283x: Set memory map at run-time
X-BeenThere: u-boot@lists.denx.de
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: U-Boot discussion <u-boot.lists.denx.de>
List-Unsubscribe: <https://lists.denx.de/options/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=unsubscribe>
List-Archive: <http://lists.denx.de/pipermail/u-boot/>
List-Post: <mailto:u-boot@lists.denx.de>
List-Help: <mailto:u-boot-request@lists.denx.de?subject=help>
List-Subscribe: <https://lists.denx.de/listinfo/u-boot>,
 <mailto:u-boot-request@lists.denx.de?subject=subscribe>
Errors-To: u-boot-bounces@lists.denx.de
Sender: "U-Boot" <u-boot-bounces@lists.denx.de>

From: Matthias Brugger <mbrugger@suse.com>

For bcm283x based on arm64 we also have to change the mm_region.
Add assign this in mach_cpu_init() so we can create now one binary
for RPi3 and RPi4.

Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---

 arch/arm/mach-bcm283x/init.c          | 65 +++++++++++++++++++++++++--
 board/raspberrypi/rpi/lowlevel_init.S |  6 +++
 board/raspberrypi/rpi/rpi.c           | 45 -------------------
 3 files changed, 67 insertions(+), 49 deletions(-)

diff --git a/arch/arm/mach-bcm283x/init.c b/arch/arm/mach-bcm283x/init.c
index 214e1078eb..f6c2946922 100644
--- a/arch/arm/mach-bcm283x/init.c
+++ b/arch/arm/mach-bcm283x/init.c
@@ -8,16 +8,68 @@
 
 #include <common.h>
 #include <dm/device.h>
+#ifdef CONFIG_ARM64
+#include <asm/armv8/mmu.h>
+#endif
 
 #define PDATA_BCM2835	0
 #define PDATA_BCM2836	1
 #define PDATA_BCM2837	2
-#define PDATA_BCM2838	3
+#define PDATA_BCM2711	3
 
 extern unsigned long rpi_bcm283x_base;
 
+#ifdef CONFIG_ARM64
+extern struct mm_region *mem_map;
+
+static struct mm_region bcm283x_mem_map[] = {
+	{
+		.virt = 0x00000000UL,
+		.phys = 0x00000000UL,
+		.size = 0x3f000000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
+			 PTE_BLOCK_INNER_SHARE
+	}, {
+		.virt = 0x3f000000UL,
+		.phys = 0x3f000000UL,
+		.size = 0x01000000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+			 PTE_BLOCK_NON_SHARE |
+			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
+	}, {
+		/* List terminator */
+		0,
+	}
+};
+
+static struct mm_region bcm2711_mem_map[] = {
+	{
+		.virt = 0x00000000UL,
+		.phys = 0x00000000UL,
+		.size = 0xfe000000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
+			 PTE_BLOCK_INNER_SHARE
+	}, {
+		.virt = 0xfe000000UL,
+		.phys = 0xfe000000UL,
+		.size = 0x01800000UL,
+		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+			 PTE_BLOCK_NON_SHARE |
+			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
+	}, {
+		/* List terminator */
+		0,
+	}
+};
+#else
+struct mm_region {
+	/* dummy struct */
+};
+#endif
+
 struct bcm283x_pdata {
 	unsigned long io_base;
+	struct mm_region *m_map;
 };
 
 struct bcm283x_pdata pdata_bcm283x[] = {
@@ -30,9 +82,11 @@ struct bcm283x_pdata pdata_bcm283x[] = {
 #ifdef CONFIG_ARM64
 	[PDATA_BCM2837] = {
 		.io_base = 0x3f000000,
+		.m_map = bcm283x_mem_map,
 	},
-	[PDATA_BCM2838] = {
+	[PDATA_BCM2711] = {
 		.io_base = 0xfe000000,
+		.m_map = bcm2711_mem_map
 	},
 #endif
 };
@@ -45,8 +99,8 @@ static const struct udevice_id board_ids[] = {
 	{ .compatible = "brcm,bcm2835", .data = PDATA_BCM2835},
 	{ .compatible = "brcm,bcm2836", .data = PDATA_BCM2836},
 	{ .compatible = "brcm,bcm2837", .data = PDATA_BCM2837},
-	{ .compatible = "brcm,bcm2838", .data = PDATA_BCM2838},
-	{ .compatible = "brcm,bcm2711", .data = PDATA_BCM2838},
+	{ .compatible = "brcm,bcm2838", .data = PDATA_BCM2711},
+	{ .compatible = "brcm,bcm2711", .data = PDATA_BCM2711},
 	{ },
 };
 
@@ -72,6 +126,9 @@ int mach_cpu_init(void)
 		if (!ret) {
 			pdat = pdata_bcm283x[of_match->data];
 			rpi_bcm283x_base = pdat.io_base;
+#ifdef CONFIG_ARM64
+			mem_map = pdat.m_map;
+#endif
 			break;
 		}
 
diff --git a/board/raspberrypi/rpi/lowlevel_init.S b/board/raspberrypi/rpi/lowlevel_init.S
index fcb99ebef7..9786a5a4b3 100644
--- a/board/raspberrypi/rpi/lowlevel_init.S
+++ b/board/raspberrypi/rpi/lowlevel_init.S
@@ -23,6 +23,12 @@ fw_dtb_pointer:
 	.word 0x0
 #endif
 
+#ifdef CONFIG_ARM64
+.global mem_map
+mem_map:
+	.dword 0x0
+#endif
+
 /*
  * Routine: save_boot_params (called after reset from start.S)
  * Description: save ATAG/FDT address provided by the firmware at boot time
diff --git a/board/raspberrypi/rpi/rpi.c b/board/raspberrypi/rpi/rpi.c
index 9e0abdda31..cf1666ce5f 100644
--- a/board/raspberrypi/rpi/rpi.c
+++ b/board/raspberrypi/rpi/rpi.c
@@ -248,51 +248,6 @@ static uint32_t rev_scheme;
 static uint32_t rev_type;
 static const struct rpi_model *model;
 
-#ifdef CONFIG_ARM64
-#ifndef CONFIG_BCM2711
-static struct mm_region bcm283x_mem_map[] = {
-	{
-		.virt = 0x00000000UL,
-		.phys = 0x00000000UL,
-		.size = 0x3f000000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
-			 PTE_BLOCK_INNER_SHARE
-	}, {
-		.virt = 0x3f000000UL,
-		.phys = 0x3f000000UL,
-		.size = 0x01000000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
-			 PTE_BLOCK_NON_SHARE |
-			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
-	}, {
-		/* List terminator */
-		0,
-	}
-};
-#else
-static struct mm_region bcm283x_mem_map[] = {
-	{
-		.virt = 0x00000000UL,
-		.phys = 0x00000000UL,
-		.size = 0xfe000000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
-			 PTE_BLOCK_INNER_SHARE
-	}, {
-		.virt = 0xfe000000UL,
-		.phys = 0xfe000000UL,
-		.size = 0x01800000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
-			 PTE_BLOCK_NON_SHARE |
-			 PTE_BLOCK_PXN | PTE_BLOCK_UXN
-	}, {
-		/* List terminator */
-		0,
-	}
-};
-#endif
-struct mm_region *mem_map = bcm283x_mem_map;
-#endif
-
 int dram_init(void)
 {
 	ALLOC_CACHE_ALIGN_BUFFER(struct msg_get_arm_mem, msg, 1);
